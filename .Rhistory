knitr::opts_chunk$set(echo = TRUE)
library("R2jags")
library("readxl")
library("AICcmodavg")
library("dplyr")
library("ggplot2")
df = read_excel("./files/Races_cleaned.xlsx")
df$TyreType = as.factor(df$TyreType)
one_hot_encoded = model.matrix(~TyreType - 1, df)
df = cbind(df,one_hot_encoded)
df = df %>% rename('Local' = "PlaceBrazilianPortuguese")
y = as.numeric(unlist(df[,'msLapTime']))
x1 = as.numeric(unlist(df[,'LapNumber']))
x2 = as.numeric(unlist(df[,'TyreLife']))
x3_1 = as.factor(unlist(df[,'TyreTypeC1']))
x3_2 = as.factor(unlist(df[,'TyreTypeC2']))
x3_3 = as.factor(unlist(df[,'TyreTypeC3']))
x3_4 = as.factor(unlist(df[,'TyreTypeC4']))
x3_5 = as.factor(unlist(df[,'TyreTypeC5']))
x4 = as.numeric(unlist(df[,'GridPosition']))
x5 = as.numeric(unlist(df[,'CircuitLength']))
c = as.factor(unlist(df['Local']))
d = as.factor(unlist(df['LastName']))
n = length(y)
n_circuits = length(unlist(unique(df['Local'])))
n_drivers = length(unlist(unique(df['LastName'])))
load("./files/Models/modelo 1b.rda")
load("./files/Models/modelo 2b.rda")
load("./files/Models/modelo 3b.rda")
load("./files/Models/modelo 4b.rda")
load("./files/Models/modelo 5b.rda")
knitr::opts_chunk$set(echo = TRUE)
library("R2jags")
library("readxl")
library("AICcmodavg")
library("dplyr")
library("ggplot2")
df = read_excel("./files/Races_cleaned.xlsx")
df$TyreType = as.factor(df$TyreType)
one_hot_encoded = model.matrix(~TyreType - 1, df)
df = cbind(df,one_hot_encoded)
df = df %>% rename('Local' = "PlaceBrazilianPortuguese")
y = as.numeric(unlist(df[,'msLapTime']))
x1 = as.numeric(unlist(df[,'LapNumber']))
x2 = as.numeric(unlist(df[,'TyreLife']))
x3_1 = as.factor(unlist(df[,'TyreTypeC1']))
x3_2 = as.factor(unlist(df[,'TyreTypeC2']))
x3_3 = as.factor(unlist(df[,'TyreTypeC3']))
x3_4 = as.factor(unlist(df[,'TyreTypeC4']))
x3_5 = as.factor(unlist(df[,'TyreTypeC5']))
x4 = as.numeric(unlist(df[,'GridPosition']))
x5 = as.numeric(unlist(df[,'CircuitLength']))
c = as.factor(unlist(df['Local']))
d = as.factor(unlist(df['LastName']))
n = length(y)
n_circuits = length(unlist(unique(df['Local'])))
n_drivers = length(unlist(unique(df['LastName'])))
load("./files/Models/modelo 1b.rda")
load("./files/Models/modelo 2b.rda")
load("./files/Models/modelo 3b.rda")
load("./files/Models/modelo 4b.rda")
model_data = data.frame(mod5.jags$BUGSoutput$summary)
model_data
model_data = cbind(rownames(model_data), data.frame(model_data, row.names=NULL))
colnames(model_data)[1] = "parameters"
model_data
levels(c)
levels(d)
model_data$parameters
filter_values1 = c("b1","b2","b3_1","b3_2","b3_3","b3_4","b3_5")
# Filter the data frame to only include rows where y is in the filter_values list
model_data_1 = model_data %>%
filter(parameters
%in% filter_values1)
model_data_1
ggplot(model_data_1, aes(x = parameters, y = mean)) +
geom_point() +
geom_errorbar(aes(ymin = X2.5., ymax = X97.5.), width = 0.2) +
scale_y_continuous(limits = c(-150,150), label=timeS_formatter, breaks = seq(-150,150,50)) +
coord_flip() +
scale_x_discrete(labels = c('Vida do pneu', 'Pneu C1', 'Pneu C2', 'Pneu C3', 'Pneu C4', 'Pneu C5')) +
xlab("") + ylab("") + ggtitle("Efeitos das variáveis das voltas") +
theme(plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size = 13))
timeMS_formatter = function(x) {
x[is.na(x)] = 0
#  h = trunc(x / 24 / 60 / 1000)
m = trunc(x / 60 / 1000)
s = (x / 1000) %% 60
s = round(s, 2)
lab = sprintf('%02dmin:%02ds', m, s) # Format the strings as MM:SS
lab = gsub('^00h:', '', lab)              # Remove leading 00: if present
lab = gsub('^0', '', lab)                # Remove leading 0 if present
}
timeS_formatter = function(x) {
x[is.na(x)] = 0
s = floor(abs(x)/1000)
ms = abs(x) %% 1000
s = ifelse(x<0, -s, s)
lab = sprintf('%ds:%03dms', s, ms)
lab = ifelse(substr(lab,1,1) == '0' & x <0 , paste("-",lab,sep= ""), lab)
lab
}
timeMS_formatter = function(x) {
x[is.na(x)] = 0
#  h = trunc(x / 24 / 60 / 1000)
m = trunc(x / 60 / 1000)
s = (x / 1000) %% 60
s = round(s, 2)
lab = sprintf('%02dmin:%02ds', m, s) # Format the strings as MM:SS
lab = gsub('^00h:', '', lab)              # Remove leading 00: if present
lab = gsub('^0', '', lab)                # Remove leading 0 if present
}
timeS_formatter = function(x) {
x[is.na(x)] = 0
s = floor(abs(x)/1000)
ms = abs(x) %% 1000
s = ifelse(x<0, -s, s)
lab = sprintf('%ds:%03dms', s, ms)
lab = ifelse(substr(lab,1,1) == '0' & x <0 , paste("-",lab,sep= ""), lab)
lab
}
model_data = data.frame(mod5.jags$BUGSoutput$summary)
model_data
model_data = cbind(rownames(model_data), data.frame(model_data, row.names=NULL))
colnames(model_data)[1] = "parameters"
model_data
levels(c)
levels(d)
model_data$parameters
filter_values1 = c("b1","b2","b3_1","b3_2","b3_3","b3_4","b3_5")
# Filter the data frame to only include rows where y is in the filter_values list
model_data_1 = model_data %>%
filter(parameters
%in% filter_values1)
model_data_1
ggplot(model_data_1, aes(x = parameters, y = mean)) +
geom_point() +
geom_errorbar(aes(ymin = X2.5., ymax = X97.5.), width = 0.2) +
scale_y_continuous(limits = c(-150,150), label=timeS_formatter, breaks = seq(-150,150,50)) +
coord_flip() +
scale_x_discrete(labels = c('Vida do pneu', 'Pneu C1', 'Pneu C2', 'Pneu C3', 'Pneu C4', 'Pneu C5')) +
xlab("") + ylab("") + ggtitle("Efeitos das variáveis das voltas") +
theme(plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size = 13))
filter_values2 = c("b4","b5")
# Filter the data frame to only include rows where y is in the filter_values list
model_data_2 = model_data %>%
filter(parameters
%in% filter_values2)
model_data_2
ggplot(model_data_2, aes(x = parameters, y = mean)) +
geom_point() +
geom_errorbar(aes(ymin = X2.5., ymax = X97.5.), width = 0.2) +
scale_y_continuous(label=timeS_formatter) + #limits = c(0,200) breaks = seq(0,200,50)
coord_flip() +
scale_x_discrete(labels = c('Grid Position', 'Tamanho do circuito')) +
xlab("") + ylab("") + ggtitle("Efeitos das covariáveis dos circuitos e pilotos") +
theme(plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size = 13))
indices = grep("^slope_circuito", model_data$parameters)
filter_values3 = model_data$parameters[indices]
# Filter the data frame to only include rows where y is in the filter_values list
model_data_3 = model_data %>% filter(parameters %in% filter_values3)
model_data_3
ggplot(model_data_3, aes(x = parameters, y = mean)) +
geom_point() +
geom_errorbar(aes(ymin = X2.5., ymax = X97.5.), width = 0.5) +
scale_y_continuous(limits = c(-150,100), label=timeS_formatter, breaks = seq(-150,100,50)) +
coord_flip() +
scale_x_discrete(labels = levels(c)) +
xlab("") + ylab("")+labs(title = "Efeito aleatório no coeficiente angular da variável número da volta")+
theme(plot.title = element_text(hjust = 0.5))
indices = grep("^int_circuito", model_data$parameters)
filter_values4 = model_data$parameters[indices]
# Filter the data frame to only include rows where y is in the filter_values list
model_data_4 = model_data %>% filter(parameters %in% filter_values4)
model_data_4
ggplot(model_data_4, aes(x = factor(parameters, levels = parameters), y = mean)) +
geom_point() +
geom_errorbar(aes(ymin = X2.5., ymax = X97.5.), width = 0.5) +
scale_y_continuous(limits = c(70000,120000), label=timeMS_formatter, breaks = seq(70000,120000,10000)) +
coord_flip() +
scale_x_discrete(labels = levels(c)) +
xlab("") + ylab("") +labs(title = "Efeito aleatório no intercepto por circuito")+
theme(plot.title = element_text(hjust = 0.5))
indices = grep("^int_piloto", model_data$parameters)
filter_values5 = model_data$parameters[indices]
# Filter the data frame to only include rows where y is in the filter_values list
model_data_5 = model_data %>% filter(parameters %in% filter_values5)
model_data_5
ggplot(model_data_5, aes(x = factor(parameters, levels = parameters), y = mean)) +
geom_point() +
geom_errorbar(aes(ymin = X2.5., ymax = X97.5.), width = 0.2) +
scale_y_continuous(limits = c(-1500,2000), label=timeS_formatter, breaks = seq(-1500,2000,500)) +
coord_flip() +
scale_x_discrete(labels = levels(d)) +
xlab("") + ylab("") +labs(title = "Efeito aleatório no intercepto por piloto")+
theme(plot.title = element_text(hjust = 0.5))
indices = grep("^y.hat", model_data$parameters)
data = model_data[indices,]
data = cbind(data,y)
data
ggplot(data, aes(x = y, y = mean)) +
geom_point(alpha = 0.2) +
scale_x_continuous(limits = c(67000,120000), label=timeMS_formatter, breaks = c(70000,80000,90000,100000,110000,120000)) +
scale_y_continuous(limits = c(67000,120000), label=timeMS_formatter, breaks = c(70000,80000,90000,100000,110000,120000)) +
xlab("Valores observados") + ylab("Valores ajustados") +
#geom_segment(data = data.frame(y = data$X2.5., x = data$mean,
#                               xend = data$mean,  yend = data$X97.5.),
#             aes(x, y, xend = xend, yend = yend),
#             inherit.aes = FALSE, linetype = 2) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data, aes(x = X97.5. - X2.5., y = mean)) +
geom_point(alpha = 0.2) +
#scale_x_continuous(limits = c(100,300), label=timeS_formatter, breaks = seq(100,300,50)) +
#scale_y_continuous(limits = c(67000,120000), label=timeMS_formatter, breaks = c(70000,80000,90000,100000,110000,120000)) +
xlab("Comprimento dos intervalos de 95% de credibilidade dos valores ajustados") + ylab("Média a posteriori dos valores ajustados") +
theme(plot.title = element_text(hjust = 0.5))
error_model1 = array(NA, dim = c(2000, n))
for (j in 1:2000){
for (i in 1:n){
error_model1[j,i] = mod1.jags$BUGSoutput$sims.list$y.hat[j,i] - y[i]
}
}
error_model2 = array(NA, dim = c(2000, n))
for (j in 1:2000){
for (i in 1:n){
error_model2[j,i] = mod2.jags$BUGSoutput$sims.list$y.hat[j,i] - y[i]
}
}
error_model3 = array(NA, dim = c(2000, n))
for (j in 1:2000){
for (i in 1:n){
error_model3[j,i] = mod3.jags$BUGSoutput$sims.list$y.hat[j,i] - y[i]
}
}
error_model4 = array(NA, dim = c(2000, n))
for (j in 1:2000){
for (i in 1:n){
error_model4[j,i] = mod4.jags$BUGSoutput$sims.list$y.hat[j,i] - y[i]
}
}
error_model5 = array(NA, dim = c(2000, n))
for (j in 1:2000){
for (i in 1:n){
error_model5[j,i] = mod5.jags$BUGSoutput$sims.list$y.hat[j,i] - y[i]
}
}
# Values
pD1 = mod1.jags$BUGSoutput$pD
pD2 = mod2.jags$BUGSoutput$pD
pD3 = mod3.jags$BUGSoutput$pD
pD4 = mod4.jags$BUGSoutput$pD
pD5 = mod5.jags$BUGSoutput$pD
D1 = mean(mod1.jags$BUGSoutput$sims.list$deviance)
D2 = mean(mod2.jags$BUGSoutput$sims.list$deviance)
D3 = mean(mod3.jags$BUGSoutput$sims.list$deviance)
D4 = mean(mod4.jags$BUGSoutput$sims.list$deviance)
D5 = mean(mod5.jags$BUGSoutput$sims.list$deviance)
dic1 = mod1.jags$BUGSoutput$DIC
dic2 = mod2.jags$BUGSoutput$DIC
dic3 = mod3.jags$BUGSoutput$DIC
dic4 = mod4.jags$BUGSoutput$DIC
dic5 = mod5.jags$BUGSoutput$DIC
mse1 = mean((error_model1^2)/n)
mse2 = mean((error_model2^2)/n)
mse3 = mean((error_model3^2)/n)
mse4 = mean((error_model4^2)/n)
mse5 = mean((error_model5^2)/n)
models = c("Model 1", "Model 2", "Model 3", "Model 4", "Model 5")
pD = c(pD1, pD2, pD3, pD4, pD5)
D = c(D1, D2, D3, D4, D5)
DIC = c(dic1, dic2, dic3, dic4, dic5)
mse = c(mse1, mse2, mse3, mse4, mse5)
# Create the data frame
table = data.frame(models, pD,D,DIC, mse)
table
ggplot(model_data_3, aes(x = parameters, y = mean)) +
geom_point() +
geom_errorbar(aes(ymin = X2.5., ymax = X97.5.), width = 0.5) +
scale_y_continuous(limits = c(-150,0), label=timeS_formatter, breaks = seq(-150,0,50)) +
coord_flip() +
scale_x_discrete(labels = levels(c)) +
xlab("") + ylab("")+labs(title = "Efeito aleatório no coeficiente angular da variável número da volta")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data, aes(x = X97.5. - X2.5., y = mean)) +
geom_point(alpha = 0.2) +
scale_x_continuous(limits = c(100,300), label=timeS_formatter, breaks = seq(100,300,50)) +
scale_y_continuous(limits = c(67000,120000), label=timeMS_formatter, breaks = c(70000,80000,90000,100000,110000,120000)) +
xlab("Comprimento dos intervalos de 95% de credibilidade dos valores ajustados") + ylab("Média a posteriori dos valores ajustados") +
theme(plot.title = element_text(hjust = 0.5))
